import React, { useState, useMemo } from 'react';
import { FixedSizeList as List } from 'react-window';
import TreeView from '@mui/lab/TreeView';
import TreeItem from '@mui/lab/TreeItem';
import { ExpandMore, ChevronRight } from '@mui/icons-material';

// Example tree data
const treeData = [
  { id: '1', name: 'Item 1', children: [{ id: '2', name: 'Item 1.1' }, { id: '3', name: 'Item 1.2' }] },
  { id: '4', name: 'Item 2', children: [{ id: '5', name: 'Item 2.1' }] },
];

// Helper function to flatten the tree data
const flattenTree = (nodes, expanded, depth = 0) => {
  let flatNodes = [];
  nodes.forEach(node => {
    flatNodes.push({ ...node, depth });
    if (node.children && expanded.includes(node.id)) {
      flatNodes = flatNodes.concat(flattenTree(node.children, expanded, depth + 1));
    }
  });
  return flatNodes;
};

const VirtualizedTreeView = () => {
  const [expanded, setExpanded] = useState([]);

  const flatNodes = useMemo(() => flattenTree(treeData, expanded), [treeData, expanded]);

  const handleToggle = (event, nodeIds) => {
    setExpanded(nodeIds);
  };

  const renderRow = ({ index, style }) => {
    const node = flatNodes[index];
    return (
      <div style={style} key={node.id}>
        <TreeItem
          nodeId={node.id}
          label={node.name}
          style={{ paddingLeft: node.depth * 16 }}
        />
      </div>
    );
  };

  return (
    <TreeView
      expanded={expanded}
      onNodeToggle={handleToggle}
      defaultCollapseIcon={<ExpandMore />}
      defaultExpandIcon={<ChevronRight />}
    >
      <List
        height={400}
        itemCount={flatNodes.length}
        itemSize={35}
        width="100%"
      >
        {renderRow}
      </List>
    </TreeView>
  );
};

export default VirtualizedTreeView;