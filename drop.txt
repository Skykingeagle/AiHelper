// Parent component CheckboxesTags.js

import * as React from 'react';
import { useState } from 'react';
import Chip from '@mui/material/Chip';
import ComponentA from './ComponentA'; // Import your component
import ComponentB from './ComponentB'; // Import your component
import ComponentC from './ComponentC'; // Import your component

const options = [
  { label: 'Component A', value: 'A' },
  { label: 'Component B', value: 'B' },
  { label: 'Component C', value: 'C' },
];

export default function CheckboxesTags() {
  const [selectedOptions, setSelectedOptions] = useState([]);

  const toggleOption = (option) => {
    if (selectedOptions.some((selectedOption) => selectedOption.value === option.value)) {
      // If the option is already selected, deselect it
      setSelectedOptions(prevOptions =>
        prevOptions.filter((prevOption) => prevOption.value !== option.value)
      );
    } else {
      // If the option is not selected, select it
      setSelectedOptions(prevOptions => [...prevOptions, option]);
    }
  };

  const toggleVisibility = (option) => {
    setSelectedOptions(prevOptions =>
      prevOptions.filter((prevOption) => prevOption.value !== option.value)
    );
  };

  return (
    <div>
      <div style={{ display: 'flex', flexWrap: 'wrap' }}>
        {options.map((option) => (
          <Chip
            key={option.value}
            label={option.label}
            clickable
            onClick={() => toggleOption(option)}
            color={selectedOptions.some((selectedOption) => selectedOption.value === option.value) ? 'primary' : 'default'}
            style={{ margin: '4px' }}
          />
        ))}
      </div>

      <div style={{ marginTop: '20px' }}>
        {selectedOptions.some((option) => option.value === 'A') && <ComponentA toggleVisibility={() => toggleVisibility({ value: 'A' })} />}
        {selectedOptions.some((option) => option.value === 'B') && <ComponentB toggleVisibility={() => toggleVisibility({ value: 'B' })} />}
        {selectedOptions.some((option) => option.value === 'C') && <ComponentC toggleVisibility={() => toggleVisibility({ value: 'C' })} />}
      </div>
    </div>
  );
}