import React, { useState, useEffect } from "react";
import { useNavigate, useLocation } from "react-router-dom";

const SearchPage: React.FC = () => {
  const [query, setQuery] = useState<string>("");
  const [results, setResults] = useState<any[]>([]);
  const navigate = useNavigate();
  const location = useLocation();

  // Function to fetch search results
  const fetchResults = async (searchQuery: string) => {
    try {
      const response = await fetch(`/api/search?q=${searchQuery}`);
      const data = await response.json();
      setResults(data.results); // Assuming API returns results in `data.results`
    } catch (error) {
      console.error("Error fetching search results:", error);
    }
  };

  // Update URL and fetch results when the user searches
  const handleSearch = () => {
    navigate(`/search?q=${query}`);
    fetchResults(query);
  };

  // Extract query from URL on component mount
  useEffect(() => {
    const params = new URLSearchParams(location.search);
    const searchQuery = params.get("q");
    if (searchQuery) {
      setQuery(searchQuery);
      fetchResults(searchQuery);
    }
  }, [location.search]);

  return (
    <div>
      <h1>Search Page</h1>
      <input
        type="text"
        value={query}
        onChange={(e) => setQuery(e.target.value)}
        placeholder="Search..."
      />
      <button onClick={handleSearch}>Search</button>
      <div>
        {results.length > 0 ? (
          <ul>
            {results.map((result, index) => (
              <li key={index}>{result.title}</li> // Adjust based on your result structure
            ))}
          </ul>
        ) : (
          <p>No results found</p>
        )}
      </div>
    </div>
  );
};

export default SearchPage;