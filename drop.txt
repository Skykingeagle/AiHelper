return (
  <div>
    {/* Main Container for the Chat Interface */}
    <Box
      sx={{
        height: '100vh', // Full-page height
        display: 'flex',
        flexDirection: 'column',
        backgroundColor: '#f8f9fa', // Light background
      }}
    >
      {/* Header Section */}
      <Grid container spacing={2} sx={{ padding: '10px', backgroundColor: '#ff5f5f', color: 'white' }}>
        <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
          <Typography variant="subtitle1" sx={{ marginLeft: '45%' }}>
            AI Bot Chat
          </Typography>
          {/* Fullscreen Button */}
          {lisFullScreen ? (
            <Fullscreen onClick={handleFullScreen} style={{ cursor: 'pointer' }} />
          ) : (
            <FullscreenExit onClick={handleFullScreen} style={{ cursor: 'pointer' }} />
          )}
        </Grid>
      </Grid>

      {/* Chat Messages Section */}
      <Grid
        item
        xs={12}
        ref={messageEl}
        sx={{
          height: '80%', // Takes 80% of the screen for messages
          overflowY: 'auto', // Scrollable area for messages
          padding: '10px',
        }}
      >
        <AiMessages messages={messages} />
        
        {/* Conditional Rendering for Feedback Form */}
        {messages.length > 1 && messages[messages.length - 1].role === Role.AI && IshowQaForm && IshowCommentForm && (
          <Box sx={{ textAlign: 'center', display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', paddingTop: '15px' }}>
            <Typography variant="subtitle2" sx={{ mr: '1rem' }}>Is this answer helpful?</Typography>
            <Box sx={{ display: 'flex', flexDirection: 'row' }}>
              <ThumbUpAlt color="primary" sx={{ mr: '0.5rem' }} onClick={handleGoodUserFeedback} style={{ cursor: 'pointer' }} fontSize="small" />
              <ThumbDownAlt onClick={handleBadUserFeedback} color="primary" style={{ cursor: 'pointer' }} fontSize="small" />
            </Box>
          </Box>
        )}

        {/* QA Form */}
        {showQaForm && (
          <form className={classes.formContainer} onSubmit={submitQaForm} style={{ padding: '5px' }}>
            <Box sx={{ display: 'flex', flexDirection: 'row', gap: '5px', alignItems: 'center' }}>
              <ContactSupportOutlined />
              <Typography variant="h5">Ask the Team</Typography>
            </Box>
            <Box sx={{ padding: '10px' }}>
              <Label>Question</Label>
              <TextField size="small" key="confluenceQsTitle" onChange={(e) => setConfluenceQsTitle(e.target.value)} sx={{ width: '50%' }} defaultValue={getLatestQuestion()} required fullWidth label="Your question" />
              <Label>Description</Label>
              <TextField size="small" fullWidth inputProps={{ style: { resize: 'both', height: '100px' } }} onChange={(e) => setConfluenceQsDescription(e.target.value)} multiline label="Details around your question" />
              <Label>Labels</Label>
              <SelectConfluenceTags labels={labelOptions} label={confluenceQsLabels} setLabel={setConfluenceQsLabels} />
            </Box>
            <Button type="submit" variant="outlined">Submit</Button>
          </form>
        )}

        {/* Comment Form */}
        {showCommentForm && (
          <form className={classes.formContainer} onSubmit={submitForm}>
            <Typography variant="h5">Please provide feedback</Typography>
            <TextField fullWidth placeholder="Type something here..." />
            <Button type="submit" variant="outlined">Submit</Button>
          </form>
        )}
      </Grid>

      {/* Input Section */}
      <Grid container sx={{ alignItems: 'center', justifyContent: 'center', padding: '10px' }}>
        {showClearChat && messages.length > 1 ? (
          <Button size="small" onClick={handleClearChat}>Clear Chat</Button>
        ) : (
          <></>
        )}
      </Grid>

      {/* Typing Indicator */}
      {botThinking ? (
        <Typography variant="overline" sx={{ width: '100%', textAlign: 'center' }}>
          Thinking...
          <LinearProgress />
        </Typography>
      ) : (
        <></>
      )}

      {/* Message Input Box */}
      <Box
        sx={{
          width: '100%',
          display: 'flex',
          justifyContent: 'space-between',
          padding: '10px',
        }}
      >
        <TextField
          fullWidth
          disabled={chatDisabled}
          placeholder="Type something here..."
          aria-label="Message"
          value={textAreaValue}
          onChange={(e) => setTextAreaValue(e.target.value)}
          onKeyDownCapture={(event) => {
            if (event.key === 'Enter') {
              handleClick();
            }
          }}
        />
        <IconButton color="primary" sx={{ alignSelf: 'center', borderRadius: '50%', paddingLeft: '15px' }} onClick={handleClick}>
          <SendRounded />
        </IconButton>
      </Box>
    </Box>
  </div>
);