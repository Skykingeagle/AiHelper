export async function chat(
  prompt: string,
  sourceArray: string[]
): Promise<any> {
  try {
    // Fetch data from the API with POST request
    const response_from_api = await fetch(botUrl + "/fetch_from_links", {
      method: "POST",
      credentials: "include",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ sourceArray, prompt }),
    });

    // Check if the response is OK (status in the range 200-299)
    if (!response_from_api.ok) {
      throw new Error("Network response was not ok: " + response_from_api.statusText);
    }

    // Parse the JSON response
    const data = await response_from_api.json();

    // Check if the response contains the expected success status
    if (data.success && data.data && data.data.status === 'SUCCESS') {
      const responseData = data.data.response; // Assuming the response structure
      console.log(responseData);
      return responseData; // Return the successful response
    } else {
      // Handle case where the API response indicates failure
      throw new Error("API response indicates failure");
    }
  } catch (e) {
    console.log(e);
    return { response: "Sorry I could not fulfill your request.. try again." };
  }
}